<?php

namespace oxide\base;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-01-31 at 04:55:21.
 */
class ServiceContainerTest extends \PHPUnit_Framework_TestCase {

   /**
    * @var ServiceContainer
    */
   protected $object;

   /**
    * Sets up the fixture, for example, opens a network connection.
    * This method is called before a test is executed.
    */
   protected function setUp() {
      $this->object = new ServiceContainer;
   }

   /**
    * Tears down the fixture, for example, closes a network connection.
    * This method is called after a test is executed.
    */
   protected function tearDown() {
      
   }

   /**
    * @covers oxide\base\ServiceContainer::bind
    * @todo   Implement testBind().
    */
   public function testBind() {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete(
              'This test has not been implemented yet.'
      );
   }

   /**
    * @covers oxide\base\ServiceContainer::isResolvable
    * @todo   Implement testIsResolvable().
    */
   public function testIsResolvable() {
      // class resolving without namespace
      $this->assertTrue($this->object->isResolvable('stdClass'));
      
      // class resolving with namespace
      $this->assertTrue($this->object->isResolvable('oxide\http\Request'));
      
      // being unable to resolve non-class
      $this->assertFalse($this->object->isResolvable('abc'));
      
      // being unable to resolve non string, so an exception is expected
      $this->object->isResolvable(array());
   }

   /**
    * @covers oxide\base\ServiceContainer::alias
    * @todo   Implement testAlias().
    */
   public function testAlias() {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete(
              'This test has not been implemented yet.'
      );
   }

   /**
    * @covers oxide\base\ServiceContainer::resolve
    * @todo   Implement testResolve().
    */
   public function testResolve() {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete(
              'This test has not been implemented yet.'
      );
   }

   /**
    * @covers oxide\base\ServiceContainer::invoke
    * @todo   Implement testInvoke().
    */
   public function testInvoke() {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete(
              'This test has not been implemented yet.'
      );
   }

   /**
    * @covers oxide\base\ServiceContainer::instantiate
    * @todo   Implement testInstantiate().
    */
   public function testInstantiate() {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete(
              'This test has not been implemented yet.'
      );
   }

   /**
    * @covers oxide\base\ServiceContainer::offsetSet
    * @todo   Implement testOffsetSet().
    */
   public function testOffsetSet() {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete(
              'This test has not been implemented yet.'
      );
   }

   /**
    * @covers oxide\base\ServiceContainer::offsetUnset
    * @todo   Implement testOffsetUnset().
    */
   public function testOffsetUnset() {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete(
              'This test has not been implemented yet.'
      );
   }

   /**
    * @covers oxide\base\ServiceContainer::offsetExists
    * @todo   Implement testOffsetExists().
    */
   public function testOffsetExists() {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete(
              'This test has not been implemented yet.'
      );
   }

   /**
    * @covers oxide\base\ServiceContainer::offsetGet
    * @todo   Implement testOffsetGet().
    */
   public function testOffsetGet() {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete(
              'This test has not been implemented yet.'
      );
   }

}
